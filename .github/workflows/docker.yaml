name: Docker

on:
  release:
    types: [published, prereleased, edited]
  push:
    branches:
      - master
    tags:
      - "*"

jobs:
  push-image:
    name: Push docker images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Prepare variables
        id: prep
        env:
          DOCKER_PROD_REGISTRY: auroraprodacr.azurecr.io
          DOCKER_DEV_REGISTRY: auroradevacr.azurecr.io
        run: |
          DOCKER_DEV_IMAGE=${DOCKER_DEV_REGISTRY}/equinor/gordo-controller
          DOCKER_PROD_IMAGE=${DOCKER_PROD_REGISTRY}/equinor/gordo-controller

          IMAGE_TYPE="prod"
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/pull/* ]]; then
            IMAGE_TYPE="dev"
            VERSION=pr-${{ github.event.number }}
          fi
          TAGS="${DOCKER_DEV_IMAGE}:latest,${DOCKER_DEV_IMAGE}:${GITHUB_SHA::8}"
          if [[ $IMAGE_TYPE == "prod" ]]; then
            TAGS="$TAGS,${DOCKER_PROD_IMAGE}:latest,${DOCKER_PROD_IMAGE}:${GITHUB_SHA::8}"
            if [[ -n "$VERSION" ]]; then
              TAGS="$TAGS,${DOCKER_PROD_IMAGE}:${VERSION},${DOCKER_DEV_IMAGE}:${VERSION}"
            fi
          else
            if [[ -n "$VERSION" ]]; then
              TAGS="$TAGS,${DOCKER_DEV_IMAGE}:${VERSION}"
            fi
          fi
          if [[ -z "$VERSION" ]]; then
            VARSION=${GITHUB_SHA::8}
          fi
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')

      - name: Login to auroraprodacr
        uses: docker/login-action@v1
        with:
          registry: auroraprodacr.azurecr.io
          username: ${{ secrets.DOCKER_PROD_USERNAME }}
          password: ${{ secrets.DOCKER_PROD_TOKEN }}

      - name: Login to auroradevacr
        uses: docker/login-action@v1
        with:
          registry: auroradevacr.azurecr.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          file: ./Dockerfile-controller
          tags: ${{ steps.prep.outputs.tags }}
          labels: |
            org.opencontainers.image.title=gordo-controller
            org.opencontainers.image.description=Kubernetes controller for the Gordo CRD
            org.opencontainers.image.url=https://github.com/equinor/gordo-controller
            org.opencontainers.image.version=${{ steps.prep.outputs.version }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=AGPL-3.0

