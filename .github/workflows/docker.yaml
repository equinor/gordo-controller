name: Docker

on:
  release:
    types: [published, prereleased, edited]
  push:
    branches:
      - master
    tags:
      - "*"
  pull_request:

jobs:
  push-image:
    name: Push docker images
    runs-on: ubuntu-latest
    env:
      IMAGE_LICENSE: AGPL-3.0
      IMAGE_HOME_URL: https://github.com/equinor/gordo-controller
      DOCKER_PROD_REGISTRY: auroraprodacr.azurecr.io
      DOCKER_REGISTRY: auroradevacr.azurecr.io
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Prepare variables
        id: prep
        run: |
          python3 scripts/github_docker.py -r equinor -i gordo-controller --with-pr --with-sha

      - name: Login to auroraprodacr
        uses: docker/login-action@v1
        if: ${{ steps.prep.outputs.login_prod_cr }}
        with:
          registry: ${{ env.DOCKER_PROD_REGISTRY }}
          username: ${{ secrets.DOCKER_PROD_USERNAME }}
          password: ${{ secrets.DOCKER_PROD_TOKEN }}

      - name: Login to auroradevacr
        uses: docker/login-action@v1
        if: ${{ steps.prep.outputs.login_cr }}
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          file: ./Dockerfile-controller
          tags: ${{ steps.prep.outputs.tags_gordo_base }}
          labels: |
            org.opencontainers.image.title=gordo-controller
            org.opencontainers.image.description=${{ env.IMAGE_DESCRIPTION }}
            org.opencontainers.image.source=${{ env.IMAGE_HOME_URL }}
            org.opencontainers.image.version=${{ steps.prep.outputs.version }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ env.IMAGE_LICENSE }}
