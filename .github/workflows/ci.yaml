name: CI

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build-docker:
    name: Build Dockerfile-controller
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile-controller
          tags: equinor/gordo-controller:latest
          load: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: equinor/gordo-controller:latest
          format: 'table'
          exit-code: '10'
          ignore-unfixed: true
          no-progress: true
          severity: 'CRITICAL,HIGH'
          timeout: '5m'

      - 
        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
        name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  test:
    name: Test ${{ matrix.rust }} on ${{ matrix.os }}
    needs: build-docker
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        rust: [stable]
    env:
      KUBERNETES_VERSION: v1.18.20
      MINIKUBE_VERSION: v1.16.0
      MINIKUBE_SHA256: "af29a48b2d79075f9d57be3a28724eef2cd628bb87283ed58dd72cbe1f8967c4"
      MINIKUBE_HOME: /home/runner
      KUBECONFIG: /home/runner/.kube/config
      CHANGE_MINIKUBE_NONE_USER: "true"

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt

      - name: Cargo cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-${{ runner.rust }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile-controller
          tags: ${{ steps.prep.outputs.base_image }}
          load: true
          cache-from: type=local,src=/tmp/.buildx-cache

      - name: Install kubectl
        run: |
          sudo curl -L -o /usr/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/v1.19.0/bin/linux/amd64/kubectl
          sudo chmod +x /usr/bin/kubectl

      - name: Install kustomize
        run: |
          sudo curl -L -o /usr/bin/kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          sudo chmod +x /usr/bin/kustomize

      - name: Build all kustomize overlays
        run: |
          sudo kustomize build k8s/production
          sudo kustomize build k8s/minikube

      - name: Install minikube
        run: |
          set -e

          sudo apt-get update
          sudo apt-get install -y conntrack
          sudo curl -L -o /usr/bin/minikube https://storage.googleapis.com/minikube/releases/${MINIKUBE_VERSION}/minikube-linux-amd64
          echo "${MINIKUBE_SHA256} /usr/bin/minikube" | sha256sum -c --status
          sudo chmod +x /usr/bin/minikube

      - run:
          ls ~/.kube
          ls ~/.minikube

      - name: Start minikube
        run: |
          set -e

          sudo -E /usr/bin/minikube start --kubernetes-version=${KUBERNETES_VERSION} --vm-driver=none
          sudo chown -R $USER $HOME/.minikube $HOME/.kube

      - name: Build image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile-controller
          tags: equinor/gordo-controller:latest
          load: true
          cache-from: type=local,src=/tmp/.buildx-cache-new

      - name: Run gordo-controller on minikube
        run: |
          kubectl apply -k k8s/minikube -n default || echo "Skipping on Istio error"
          bash scripts/wait_gordo_controller.sh

      - name: Test CRDs
        run: |
          kubectl get gordos > /dev/null
          kubectl get models > /dev/null

      - name: Unit tests
        uses: actions-rs/cargo@v1
        env:
          KUBERNETES_SERVICE_HOST: localhost
          KUBERNETES_SERVICE_PORT: 8443
        with:
          command: test
          args: --tests -- --test-threads=1

      - name: Integration Tests
        env:
          DEPLOY_IMAGE: "gordo-infrastructure/gordo-deploy"
          DOCKER_REGISTRY: "docker.io"
        run: |
          bash scripts/integration_tests.sh
